import { getConnection } from '../config/database.js';

async function fixPermissionsSimple() {
  try {
    console.log('üîß Corrigindo permiss√µes de tarefas padr√£o...');
    
    const pool = await getConnection();
    
    // 1. Inserir permiss√£o de deletar tarefas padr√£o se n√£o existir
    console.log('üìù Verificando permiss√£o standard-tasks.delete...');
    
    const permissionExists = await pool.request().query(`
      SELECT COUNT(*) as count FROM Permissions WHERE name = 'standard-tasks.delete'
    `);
    
    if (permissionExists.recordset[0].count === 0) {
      console.log('‚ûï Inserindo permiss√£o standard-tasks.delete...');
      await pool.request().query(`
        INSERT INTO Permissions (name, description, resource, action) 
        VALUES ('standard-tasks.delete', 'Excluir tarefas padr√£o', 'standard-tasks', 'delete')
      `);
      console.log('‚úÖ Permiss√£o standard-tasks.delete inserida');
    } else {
      console.log('‚úÖ Permiss√£o standard-tasks.delete j√° existe');
    }
    
    // 2. Remover permiss√£o de deletar tarefas padr√£o de todos os roles
    console.log('üóëÔ∏è  Removendo permiss√£o de deletar tarefas padr√£o de todos os roles...');
    
    await pool.request().query(`
      DELETE FROM RolePermissions 
      WHERE permissionId IN (
        SELECT id FROM Permissions WHERE name = 'standard-tasks.delete'
      )
    `);
    
    console.log('‚úÖ Permiss√µes removidas de todos os roles');
    
    // 3. Adicionar permiss√£o apenas para admin
    console.log('üëë Adicionando permiss√£o apenas para admin...');
    
    await pool.request().query(`
      INSERT INTO RolePermissions (role, permissionId)
      SELECT 'admin', id FROM Permissions WHERE name = 'standard-tasks.delete'
    `);
    
    console.log('‚úÖ Permiss√£o adicionada apenas para admin');
    
    // 4. Verificar resultado
    console.log('\nüîç Verificando resultado...');
    
    const result = await pool.request().query(`
      SELECT 
        p.name,
        rp.role,
        rp.granted
      FROM Permissions p
      JOIN RolePermissions rp ON p.id = rp.permissionId
      WHERE p.name = 'standard-tasks.delete'
      ORDER BY rp.role
    `);
    
    console.log('\nüìä Quem pode deletar tarefas padr√£o:');
    if (result.recordset.length === 0) {
      console.log('   ‚ùå Nenhuma permiss√£o encontrada');
    } else {
      result.recordset.forEach(perm => {
        const status = perm.granted ? '‚úÖ PODE' : '‚ùå N√ÉO PODE';
        console.log(`   ${perm.role}: ${status} deletar tarefas padr√£o`);
      });
    }
    
    console.log('\n‚úÖ Corre√ß√£o conclu√≠da!');
    console.log('üõ°Ô∏è  Agora apenas ADMIN pode deletar tarefas padr√£o.');
    console.log('üìã Comportamento do sistema:');
    console.log('   - Tarefas padr√£o: Apenas ADMIN pode deletar');
    console.log('   - Tarefas normais: ADMIN, SUPERVISOR, ENGINEER podem deletar');
    console.log('   - Tarefas com progresso: Ningu√©m pode deletar');
    console.log('   - Tarefas com hist√≥rico: Ningu√©m pode deletar');
    
  } catch (error) {
    console.error('‚ùå Erro ao corrigir permiss√µes:', error);
  } finally {
    process.exit(0);
  }
}

fixPermissionsSimple();
